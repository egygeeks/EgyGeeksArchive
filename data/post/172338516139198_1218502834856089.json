{"id":"172338516139198_1218502834856089","from":{"name":"Mahmoud M. Abdel-Fattah","id":"10158378381465387"},"message":"I'm using ExpressJS (NodeJS) and want to do the following:\nfunction1 () {\n   request(http://.....)\n   return x;\n}\n\nfunction 2() {\n   request(http://.....)\n   return y;\n}\n\nfunction3 (x+y) {\n return x+y;\n}\n\nmain_function() {\n var x = function1()\n var y = function2()\n function3(x,y);\n}\n\nMy problem is request is asynchronous! so each time I call main_function(), x = undefined because the request was not finished yet!\n\nSo, how can I make request synchronous? or what library should I use with ExpressJS to help me making promises?\n\nI tried async.series (Async Library) but it did not work!","actions":[{"name":"Comment","link":"https://www.facebook.com/172338516139198/posts/1218502834856089"},{"name":"Like","link":"https://www.facebook.com/172338516139198/posts/1218502834856089"},{"name":"Report Post to Admin","link":"https://www.facebook.com/groups/egyptian.geeks/members/"}],"privacy":{"value":"","description":"","friends":"","allow":"","deny":""},"type":"status","created_time":"2016-08-30T17:16:51+0000","updated_time":"2016-09-01T06:00:03+0000","is_hidden":false,"is_expired":false,"likes":{"data":[{"id":"1305943819490269","name":"Ahmed Aziz"}],"paging":{"cursors":{"before":"MTMwNTk0MzgxOTQ5MDI2OQZDZD","after":"MTMwNTk0MzgxOTQ5MDI2OQZDZD"}}},"comments":{"data":[{"created_time":"2016-08-30T17:18:45+0000","from":{"name":"Mahmoud Mortda","id":"1480228465362952"},"message":"Callback function","can_remove":false,"like_count":0,"user_likes":false,"id":"1218503581522681"},{"created_time":"2016-08-30T17:22:44+0000","from":{"name":"Mohamed Hisham","id":"10155001831198847"},"message":"Use async \nhttps://github.com/caolan/async","can_remove":false,"like_count":0,"user_likes":false,"id":"1218506504855722"},{"created_time":"2016-08-30T17:24:40+0000","from":{"name":"Mahmoud M. Abdel-Fattah","id":"10158378381465387"},"message":"Marwan Osman","can_remove":false,"like_count":0,"message_tags":[{"id":"10158636056815227","length":12,"name":"Marwan Osman","offset":0,"type":"user"}],"user_likes":false,"id":"1218508221522217"},{"created_time":"2016-08-30T17:27:12+0000","from":{"name":"Mohammad Aboelnour","id":"10211609665746652"},"message":"tried with promise object? : https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Promise\n\nhttp://12devs.co.uk/articles/promises-an-alternative-way-to-approach-asynchronous-javascript/","can_remove":false,"like_count":3,"user_likes":false,"id":"1218509614855411"},{"created_time":"2016-08-30T17:34:18+0000","from":{"name":"Yahya Sabry","id":"10154673962792886"},"message":"Are you sure you called the callback method properly after getting the response?! if you can put the code snippet of the calling structure that would help more","can_remove":false,"like_count":1,"user_likes":false,"id":"1218514301521609"},{"created_time":"2016-08-30T20:13:13+0000","from":{"name":"Muhammed Nagy","id":"342947436105550"},"message":"Use callbacks","can_remove":false,"like_count":0,"user_likes":false,"id":"1218617214844651"},{"created_time":"2016-08-30T20:15:43+0000","from":{"name":"Muhammed Nagy","id":"342947436105550"},"message":"Use callbacks","can_remove":false,"like_count":0,"user_likes":false,"id":"1218618424844530"},{"created_time":"2016-08-30T23:14:42+0000","from":{"name":"Mostafa Muhammad","id":"10154873940166210"},"message":"You have many options to handle asynchronous calls:\n\n1) Callbacks are okay but are no longer the recommended pattern.\nhttp://stackoverflow.com/questions/9596276/how-to-explain-callbacks-in-plain-english-how-are-they-different-from-calling-o\n\n2) Promises which is your best bet for comaptibility with older versions of NodeJS, they are also the cleaner way of waiting for two or more async processes to finish.\nhttps://davidwalsh.name/promises\n\n3) To keep your code linear and use \"try/catch\" as you would with normal code then go for (async/await) keywords of ES7 but you will need the latest NodeJS to have that.\nhttp://rossboucher.com/await","can_remove":false,"like_count":1,"user_likes":false,"id":"1218733698166336"},{"created_time":"2016-08-31T13:35:43+0000","from":{"name":"Mahmoud M. Abdel-Fattah","id":"10158378381465387"},"message":"Guys, the problem with callbacks is that you have to re-write the function for every time that you are going to use it!\n\nSo, if I'll use function1 10 times in different scenarios with call back, that mens I've to write it 10 different times, because in every time it'll has different callback!","can_remove":false,"like_count":0,"user_likes":false,"id":"1219220874784285"},{"created_time":"2016-08-31T16:09:19+0000","from":{"name":"Alaa Attya Mohamed","id":"10210243495897310"},"message":"No you just need to pass the function name instead of writing the anonymous function each time","can_remove":false,"like_count":0,"user_likes":false,"id":"1219314641441575"},{"created_time":"2016-08-31T16:13:29+0000","from":{"name":"Emad Elwany","id":"10155227932554701"},"message":"Mahmoud M. Abdel-Fattah use promises...\nFirst promisify request() (you can do it yourself using code like the following or using a package like promisify):\n\nfunction requestPromise(url){\n    return new Promise(function(resolve, reject){\n         response = request(url, function(err, res, body{\n                  if(err) \n                      return reject(err);\n                  resolve(body);\n         });\n    }\n}... or just use the request-promise package...\n\nthen your x/y calls become:\nvar xPromise = requestPromise(\"http:..\").then(function(body){ return x;});\nvar yPromise = requestPromise(\"http:..\").then(function(body){ return y;});\n\nand you wait for both using Promise.All():\nPromise.All([xPromise, yPromise]).then(function(results){\n      function3(results[0], results[1]);\n}, function(err){ // Handle errors});","can_remove":false,"like_count":1,"message_tags":[{"id":"10158378381465387","length":23,"name":"Mahmoud M. Abdel-Fattah","offset":0,"type":"user"}],"user_likes":false,"id":"1219317621441277"},{"created_time":"2016-09-01T06:00:00+0000","from":{"name":"Mohamed Amgad","id":"10212303086792312"},"message":"I think promises answer is the best practice","can_remove":false,"like_count":0,"user_likes":false,"id":"1219834258056280"}],"paging":{"cursors":{"before":"WTI5dGJXVnVkRjlqZAFhKemIzSTZANVEl4T0RVd016VTRNVFV5TWpZANE1Ub3hORGN5TlRjM05USTIZD","after":"WTI5dGJXVnVkRjlqZAFhKemIzSTZANVEl4T1Rnek5ESTFPREExTmpJNE1Eb3hORGN5TnpBNU5qQXcZD"}}}}