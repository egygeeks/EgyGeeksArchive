{"id":"172338516139198_1068517833187924","from":{"name":"Amr AbuMuslim","id":"10210309758573088"},"message":"Do you still use callbacks in your JavaScript? You probably need to checkout my post about #Promises.\n","story":"Amr AbuMuslim shared a link to the group: Egyptian Geeks.","story_tags":{"0":[{"id":"10210309758573088","name":"Amr AbuMuslim","type":"user","offset":0,"length":13}],"42":[{"id":"172338516139198","name":"Egyptian Geeks","type":"group","offset":42,"length":14}]},"picture":"https://fbexternal-a.akamaihd.net/safe_image.php?d=AQAs0qJ3S11rn_81&w=130&h=130&url=https%3A%2F%2Famrabdulrahman.files.wordpress.com%2F2016%2F01%2Fscreen-shot-2016-01-26-at-1-32-49-am.png&cfs=1&_nc_hash=AQD-lnAlMr72f1OB","link":"http://amrabdulrahman.com/2016/01/26/promises/","name":"Promises","caption":"amrabdulrahman.com","description":"Should I read this? If you're a JavaScript developer who still uses callbacks (on either the client side or server side) then this post is for you. If you don't know what Promises are, then you pro...","icon":"https://www.facebook.com/images/icons/post.gif","actions":[{"name":"Comment","link":"https://www.facebook.com/172338516139198/posts/1068517833187924"},{"name":"Like","link":"https://www.facebook.com/172338516139198/posts/1068517833187924"},{"name":"Report Post to Admin","link":"https://www.facebook.com/groups/egyptian.geeks/members/"}],"privacy":{"value":"","description":"","friends":"","allow":"","deny":""},"type":"link","status_type":"shared_story","created_time":"2016-01-26T11:53:52+0000","updated_time":"2016-01-27T21:45:13+0000","is_hidden":false,"is_expired":false,"likes":{"data":[{"id":"1932899953606580","name":"Osama Mohamed"},{"id":"10212004913375951","name":"Mahmoud Kandeel"},{"id":"10155252594718081","name":"Ahmed Zain Mohammed"},{"id":"10158341490285392","name":"Mohamed Redavich Eldehiry"},{"id":"1328679870533293","name":"Abdelrahman Elkady"},{"id":"10154871355735944","name":"Tarek Amr"},{"id":"1263319723721469","name":"Ahmad Hassan Posten"},{"id":"10158476825265637","name":"Ahmed Aswani"},{"id":"10211847388241825","name":"Ahmed Shawky"},{"id":"1394376843970680","name":"Ahmed Abdurrahman"},{"id":"10210652671531161","name":"Mohamed Magdy Kassem"},{"id":"1358635904197747","name":"Ahmad Ragab"},{"id":"10211352738550614","name":"Mostafa Magdy"},{"id":"1809200236011686","name":"Ahmed Gamal"},{"id":"10212240776640933","name":"أحمد حجاج"}],"paging":{"cursors":{"before":"MTkzMjg5OTk1MzYwNjU4MAZDZD","after":"MTAyMTIyNDA3NzY2NDA5MzMZD"}}},"comments":{"data":[{"created_time":"2016-01-26T11:55:25+0000","from":{"name":"Emad Elsaid","id":"10154379038212957"},"message":"I have to say, your blog design is simple and beautiful, is it a wordpress theme or you did it yourself?","can_remove":false,"like_count":0,"user_likes":false,"id":"1068518306521210"},{"created_time":"2016-01-26T11:57:03+0000","from":{"name":"Ahmed Gamal","id":"1809200236011686"},"message":"hot topic to read ;) but you shoul to send it private firslty y m3lm :D :P","can_remove":false,"like_count":1,"user_likes":false,"id":"1068518869854487"},{"created_time":"2016-01-26T12:20:57+0000","from":{"name":"Ahmed Abdurrahman","id":"1394376843970680"},"message":"Nice post indeed.\nHot topic, simple illustration & concise coding examples.\nKeep up the good work.","can_remove":false,"like_count":0,"user_likes":false,"id":"1068526433187064"},{"created_time":"2016-01-26T12:33:17+0000","from":{"name":"Mohamed Amin","id":"1858939887697579"},"message":"Amr AbuMuslim I just fought with me colleagues whether callbacks are rendered obsolete by Promises or Not :)\n\nthe only takeaway I have against your post is that your saying Promises are for flow control and I think this will be a huge misleading point especially for newly developers in javascript.\n\n Simple promises are designed for dealing with the issue of the absence of certain information at a certain time.\nlike File system access and API calls where you don't have instantly the value so you will have to implement it in the promises way :) \nFor flow control in javascript, we don't have any blocking mechanism (till ES7 async/await which gives a better interface for it) yet we're left with callback functions the only way.. and basically, people uses it as sugar coated syntax but intrinsically promises are just callback functions with events.\nSo I would say that I don't mind using Promises for control flow but I won't agree to name the article \"Do you still use callbacks in your JavaScript? You probably need to checkout my post about #Promises.\"\n\nA great article, Though :)","can_remove":false,"like_count":1,"message_tags":[{"id":"10210309758573088","length":13,"name":"Amr AbuMuslim","offset":0,"type":"user"}],"user_likes":false,"id":"1068530689853305"},{"created_time":"2016-01-26T12:35:48+0000","from":{"name":"Ahmed Aswani","id":"10158476825265637"},"message":"nice work informative, concise, well formatted, keep on","can_remove":false,"like_count":1,"user_likes":false,"id":"1068532233186484"},{"created_time":"2016-01-26T17:28:44+0000","from":{"name":"Hassan Aly Selim","id":"10155071713202292"},"message":"Well the functions you send to \"then\" are basically the callbacks, it's just that now nested callbacks have been flattened.\nThe next step here is using the async/await pattern suggested for ECMA Script 7, which (from what I understand) is very similar to what has been implemented in C# 5, you don't have to write any inline functions or reference any functions, behind the scenes all the code after an \"await\" line gets wrapped into a function and give to the \"then\" part, so yes it's still the same thing, but you don't see it or have to deal with it :)\n(and BTW at least in C# 5 you could still combine promises, then you can await the new combined promise)","can_remove":false,"like_count":1,"user_likes":false,"id":"1068665119839862"},{"created_time":"2016-01-27T21:45:12+0000","from":{"name":"Ahmed Zain Mohammed","id":"10155252594718081"},"message":"Cool, I have been ignoring this for some time now, I think it's time to get into it,","can_remove":false,"like_count":0,"user_likes":false,"id":"1069330576439983"}],"paging":{"cursors":{"before":"WTI5dGJXVnVkRjlqZAFhKemIzSTZANVEEyT0RVeE9ETXdOalV5TVRJeE1Eb3hORFV6T0RBNU16STEZD","after":"WTI5dGJXVnVkRjlqZAFhKemIzSTZANVEEyT1RNek1EVTNOalF6T1RrNE16b3hORFV6T1RNeE1URXoZD"}}}}