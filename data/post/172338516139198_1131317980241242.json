{"id":"172338516139198_1131317980241242","from":{"name":"Khaled M. Diab","id":"10212550395463324"},"message":"I read this article about HTTP requests throughput using python3 and aiohttp library. The author attempts to write an async http client to generate the max. number of requests. I think that this type of articles shows us how NOT to write a benchmarking article :D\n \nAlthough the HTTP request is realistic (requesting a file from disk; not just an echo) and the introduction is catchy, the author failed to benchmark the library very well. First, the article didn't mention benchmark setup: client & server specifications (CPU/memory/network interface etc...). Second, the title is actually misleading: the author failed to write 1M requests per what time unit! Third, the author is adding non realistic delay values between 0-1 seconds; these delays usually follow a distribution and not uniformly distributed as the author used. Fourth, it's clearly that the author didn't do his homework by reading some benchmarking articles/software (it's obvious from the questions he asks in the end).\n\nMore importantly, and from the technical viewpoint, this article actually shows that python sucks :D (I used python daily btw). Generating 1M requests in 52 minutes means that the async client can generate ~320 req/sec which is really a small number (the CPUs are fully utilized as the author mentioned). To put this number in perspective, the old \"ab\" can simply generate 1K req/sec. JMeter can generate 30K req/sec, and \"wrk\" can generate 750K req/sec!\n\nI think that such articles shed the light on how we should benchmark HTTP request generating tools: workload and delay specifications, minimum CPU/memory requirements, etc..\n\nWhat do you think?","story":"Khaled M. Diab shared a link to the group: Egyptian Geeks.","story_tags":{"0":[{"id":"10212550395463324","name":"Khaled M. Diab","type":"user","offset":0,"length":14}],"43":[{"id":"172338516139198","name":"Egyptian Geeks","type":"group","offset":43,"length":14}]},"link":"http://pawelmhm.github.io/asyncio/python/aiohttp/2016/04/22/asyncio-aiohttp.html","name":"Making 1 million requests with python-aiohttp","caption":"pawelmhm.github.io","description":"In this post Iâ€™d like to test limits of python aiohttp and check its performance in terms of requests per minute. Everyone knows that asynchronous code perf...","icon":"https://www.facebook.com/images/icons/post.gif","actions":[{"name":"Comment","link":"https://www.facebook.com/172338516139198/posts/1131317980241242"},{"name":"Like","link":"https://www.facebook.com/172338516139198/posts/1131317980241242"},{"name":"Report Post to Admin","link":"https://www.facebook.com/groups/egyptian.geeks/members/"}],"privacy":{"value":"","description":"","friends":"","allow":"","deny":""},"type":"link","status_type":"shared_story","created_time":"2016-04-25T07:52:28+0000","updated_time":"2016-04-26T21:32:07+0000","is_hidden":false,"is_expired":false,"likes":{"data":[{"id":"10155181258139701","name":"Amr ELsaqqa"},{"id":"10158343546485006","name":"Ahmed Reda"}],"paging":{"cursors":{"before":"MTAxNTUxODEyNTgxMzk3MDEZD","after":"MTAxNTgzNDM1NDY0ODUwMDYZD"}}},"comments":{"data":[{"created_time":"2016-04-25T16:10:06+0000","from":{"name":"Ibraheem Osama","id":"10154341856183093"},"message":"I liked Asp.net Benchmarks :) because it is simply open source and to straight to the point from servers OS, CPU utilization, used frameworks and so on \nhttps://github.com/aspnet/benchmarks","can_remove":false,"like_count":0,"user_likes":false,"id":"1131536060219434"}],"paging":{"cursors":{"before":"WTI5dGJXVnVkRjlqZAFhKemIzSTZANVEV6TVRVek5qQTJNREl4T1RRek5Eb3hORFl4TmpBd05qQTMZD","after":"WTI5dGJXVnVkRjlqZAFhKemIzSTZANVEV6TVRVek5qQTJNREl4T1RRek5Eb3hORFl4TmpBd05qQTMZD"}}}}