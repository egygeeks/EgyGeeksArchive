{"id":"172338516139198_1201387543234285","from":{"name":"Mohamed Nady","id":"10154387282503733"},"message":"Question Title : \"From Your Experience Perspective\" Which Database is the best choice for large data volume.\n\nProblem Info   : \n                 - We are about to start a new project which in the future should have a massive large database, Millions of recordes\n                 - SQL Server Can Handel this scenario in appropriate way ?\n                 - Actually We are hesitated in our Decision \n\nConsecrations : \n                - We will use  ( .Net WebApi ) For The Data Interactions.\n                - Data Will be ( On premise  ) in the organisation Servers (No Payed Cloud).\n                - We will Execute a Complex Data Operations ( Query , Insertion , Data Analysis , etc ..) \n\n#NoSQL #SQL #BigData #mongodb #SqlServer","actions":[{"name":"Comment","link":"https://www.facebook.com/172338516139198/posts/1201387543234285"},{"name":"Like","link":"https://www.facebook.com/172338516139198/posts/1201387543234285"},{"name":"Report Post to Admin","link":"https://www.facebook.com/groups/egyptian.geeks/members/"}],"privacy":{"value":"","description":"","friends":"","allow":"","deny":""},"type":"status","created_time":"2016-08-11T11:34:14+0000","updated_time":"2016-08-12T07:51:15+0000","is_hidden":false,"is_expired":false,"likes":{"data":[{"id":"10154887093460568","name":"Mohamed Rashed"},{"id":"1448981871792319","name":"Mohamed Abdelrahman"},{"id":"10155584906140656","name":"Mohammad Zekrallah"}],"paging":{"cursors":{"before":"MTAxNTQ4ODcwOTM0NjA1NjgZD","after":"MTAxNTU1ODQ5MDYxNDA2NTYZD"}}},"comments":{"data":[{"created_time":"2016-08-11T11:36:07+0000","from":{"name":"Mohamed Nady","id":"10154387282503733"},"message":"Mohamed Bakr Mohamed Rashed Amr Badawy Meligy Mohamed Mohammad Zekrallah Amro Ali","can_remove":false,"like_count":0,"message_tags":[{"id":"10158336733320425","length":12,"name":"Mohamed Bakr","offset":0,"type":"user"},{"id":"10154887093460568","length":14,"name":"Mohamed Rashed","offset":13,"type":"user"},{"id":"10155143998426834","length":10,"name":"Amr Badawy","offset":28,"type":"user"},{"id":"10154884040385170","length":14,"name":"Meligy","offset":39,"type":"user"},{"id":"10155584906140656","length":18,"name":"Mohammad Zekrallah","offset":54,"type":"user"},{"id":"10155240646239379","length":8,"name":"Amro Ali","offset":73,"type":"user"}],"user_likes":false,"id":"1201388629900843"},{"created_time":"2016-08-11T11:36:23+0000","from":{"name":"Mahmoud Mortda","id":"1480228465362952"},"message":"It depends on many factors, you cannot think in this way","can_remove":false,"like_count":2,"user_likes":false,"id":"1201388766567496"},{"created_time":"2016-08-11T11:59:34+0000","from":{"name":"Mohamed Rashed","id":"10154887093460568"},"message":"Based on your experience ... I think SQL Server can handle, also you can think in hybrid solutions, Mixing between SQL Server & any NoSQL database.\nfor REST Services check also ServiceStack, you can ask M Mohammad Zekrallah","can_remove":false,"like_count":4,"message_tags":[{"id":"10155584906140656","length":18,"name":"Mohammad Zekrallah","offset":205,"type":"user"}],"user_likes":false,"id":"1201402693232770"},{"created_time":"2016-08-11T12:54:22+0000","from":{"name":"Said Bakr","id":"10154979109648745"},"message":"What about transactions?","can_remove":false,"like_count":0,"user_likes":false,"id":"1201433353229704"},{"created_time":"2016-08-11T14:27:47+0000","from":{"name":"Sam Almahy","id":"10158386141730165"},"message":"depends on:\ndata types\nqueries analysis","can_remove":false,"like_count":0,"user_likes":false,"id":"1201485133224526"},{"created_time":"2016-08-11T14:32:39+0000","from":{"name":"Sam Almahy","id":"10158386141730165"},"message":"checkout :-\nneo4j\nredis","can_remove":false,"like_count":1,"user_likes":false,"id":"1201488133224226"},{"created_time":"2016-08-11T14:35:30+0000","from":{"name":"Muhammad Negm","id":"10212131509466411"},"message":"Don't go any way near SQL, relational database was made when disk space was expensive.\nI'd suggest to go with cassandra or Hbase or MongoDB","can_remove":false,"like_count":4,"user_likes":false,"id":"1201489406557432"},{"created_time":"2016-08-11T15:50:58+0000","from":{"name":"Sam Hegazy","id":"1929273290636334"},"message":"It depends on what you need exactly . And your resources ..\nBut if you want an easy way to Manage big number of records\nI would suggest using FILEMAKER 15.","can_remove":false,"like_count":1,"user_likes":false,"id":"1201536406552732"},{"created_time":"2016-08-11T16:18:09+0000","from":{"name":"Mohamed Elsherif","id":"10158483817400314"},"message":"Don't optimize prematurely, you can't tell the future, start simple and optimize based on your calculated bottleneck, it is almost impossible to predict a bottleneck years in advance, and it is easy to add complexity in the wrong place which will make any future optimizations far more complex.","can_remove":false,"like_count":8,"user_likes":false,"id":"1201551926551180"},{"created_time":"2016-08-11T20:05:37+0000","from":{"name":"Mohammad Fouad","id":"10154777096910845"},"message":"NoSQL is cool, but do not follow the hype too early.\n\nI would initially use SQL for every single thing except the following:\n- caching and user sessions, and you are too early to need caching anyways\n- Message Queues, if your code needs to pass messages and events around a lot\n- Documents and Files and Assets, SQL should not be used to Store Binary data or JSON or XML, this is why S3 and ObjectStorage is for.\n- Standalone tables, if the table does not make sense to have any relationship (like if you are storing Emails, or )\n\nThese are the most annoying problems that SQL should not handle.\n\nEvery single startup out there, including Uber, Facebook started with an RDBMS, then now they are writing their own Engines just to optimize for their use cases. \n\nI certainly cant see any point in using Mongo or HBase to store Orders or Invoices!!","can_remove":false,"like_count":4,"user_likes":false,"id":"1201683123204727"},{"created_time":"2016-08-11T20:11:44+0000","from":{"name":"Mohammad Fouad","id":"10154777096910845"},"message":"One main point that does not come intuitively until you see it in the wild, is that: \n\"It is totally OK if you use 2 different databases in the same application\"\n\nFor example, Gmail could use SQL to store User Accounts, and BigTable to store their Emails\n\nLast.fm Recommendation system uses PostgreSQL to store the songs and artists and genres, because these do not change alot. and then use some Hadoop to store the actual listening habits.\nSo they use SQL for the part that does not change often but is queried a lot, and then, NoSQL for the part that is massively distributed and requires alot of Writes and analysis.","can_remove":false,"like_count":2,"user_likes":false,"id":"1201686009871105"},{"created_time":"2016-08-11T23:44:56+0000","from":{"name":"Meligy","id":"10154884040385170"},"message":"Can SQL Server handle millions of records?\nYes","can_remove":false,"like_count":4,"user_likes":false,"id":"1201785093194530"},{"created_time":"2016-08-12T00:19:31+0000","from":{"name":"Usama Fayez","id":"10154898806065280"},"message":"Like everyone else said, unless you're going to design a system where the latency (measured in the order of milliseconds) is a factor, don't over-engineer your solution. Start with a simple design (A relational db should work). Later on, if you really need to, you can always migrate your data to a new system or add caching to improve performance.","can_remove":false,"like_count":2,"user_likes":false,"id":"1201820156524357"},{"created_time":"2016-08-12T01:18:33+0000","from":{"name":"Ahmad Hisham","id":"10158274819655058"},"message":"For the simple question of whether SQL Server can handle big databases, yes SQL Server can handle a Terabyte database since 1997 with the correct design/hardware.\nThe more important question is  this \"Is SQL Server the appropriate database for my App design and requirements or not\"","can_remove":false,"like_count":1,"user_likes":false,"id":"1201844683188571"},{"created_time":"2016-08-12T07:51:08+0000","from":{"name":"Ibraheem Osama","id":"10154341856183093"},"message":"Read this article about Document DB problems not only mongo as mentioned in the article\n :) it will help you a lot. Go for SQL Server for simplicity and as most of geeks mentioned it can handle millions.\nTry to measure the number of concurrent connections on your system because it affects any database engine :) \nDon't go for a hybrid approach unless there is a valid point for it.\nTo improve the analytics performance create a data warehouse Database.\nOf course Asp.net can do the job  \n\nhttp://www.sarahmei.com/blog/2013/11/11/why-you-should-never-use-mongodb/","can_remove":false,"like_count":2,"user_likes":false,"id":"1202026049837101"}],"paging":{"cursors":{"before":"WTI5dGJXVnVkRjlqZAFhKemIzSTZANVEl3TVRNNE9EWXlPVGt3TURnME16b3hORGN3T1RFMU16WTMZD","after":"WTI5dGJXVnVkRjlqZAFhKemIzSTZANVEl3TWpBeU5qQTBPVGd6TnpFd01Ub3hORGN3T1RnNE1qWTUZD"}}}}