{"id":"172338516139198_722642847775426","from":{"id":"100000193960321","name":"Abdalla Elnaggar"},"to":{"data":[{"name":"Egyptian Geeks","id":"172338516139198"}]},"message":"طيب سؤال تانى مش interface ده عباره عن class abstract  ازاى ينفع اعمل منه اobject بشوفها كتير","actions":[{"name":"Comment","link":"https://www.facebook.com/172338516139198/posts/722642847775426"},{"name":"Like","link":"https://www.facebook.com/172338516139198/posts/722642847775426"}],"privacy":{"value":""},"type":"status","created_time":"2014-03-30T00:36:52+0000","updated_time":"2014-03-30T01:31:29+0000","comments":{"data":[{"id":"722649707774740","from":{"id":"1486650909","name":"Khaled M. Diab"},"message":"you can't create an object from an abstract class ...\nBut you can create a reference:\nMyAbstractClass ref = new MyConcreteClass()\nGiven that MyConcreteClass inherits MyAbstractClass","can_remove":false,"created_time":"2014-03-30T00:39:12+0000","like_count":0,"user_likes":false},{"id":"722652831107761","from":{"id":"1266190039","name":"Aboubakr Gamal"},"message":"Actually you make object from child classes","can_remove":false,"created_time":"2014-03-30T00:54:45+0000","like_count":0,"user_likes":false},{"id":"722653034441074","from":{"id":"100000193960321","name":"Abdalla Elnaggar"},"message":"child that implements or extends","can_remove":false,"created_time":"2014-03-30T00:55:43+0000","like_count":1,"user_likes":false},{"id":"722653204441057","from":{"id":"1266190039","name":"Aboubakr Gamal"},"message":"Both","can_remove":false,"created_time":"2014-03-30T00:56:31+0000","like_count":1,"user_likes":false},{"id":"722654997774211","from":{"id":"1055914266","name":"Hady Ahmad"},"message":"What you likely see are anonymous interface implementations common in event handlers. \nStill the rule applies, you can't instantiate an object from an abstract class or an interface. \n\nYou can instantiate from a child that extends an abstract class AND implements all its abstract methods (or you're forced to declare that child as abstract as well and it in turn can't be instantiated)\n\nYou can also instantiate from a non-abstract class that implements ALL methods of an interface, your compiler will complain about partially implemented interfaces without declaring a class as abstract.","can_remove":false,"created_time":"2014-03-30T01:06:08+0000","like_count":2,"user_likes":false},{"id":"722657197773991","from":{"id":"100001360671902","name":"Mohamed Moshrif"},"message":"Interface is not an abstract class. Interface is just a representation of specific actions that a specific object can do, it doesn't implement how these actions can be done. It basically used to define contracts between multiple objects where each object could expect specific action to exist in a specific class if it implements a given interface","can_remove":false,"created_time":"2014-03-30T01:16:28+0000","like_count":2,"user_likes":false},{"id":"722661057773605","from":{"id":"1266190039","name":"Aboubakr Gamal"},"message":"Code contract","can_remove":false,"created_time":"2014-03-30T01:31:29+0000","like_count":1,"user_likes":false}],"paging":{"cursors":{"after":"NzIyNjYxMDU3NzczNjA1","before":"NzIyNjQ5NzA3Nzc0NzQw"}}}}