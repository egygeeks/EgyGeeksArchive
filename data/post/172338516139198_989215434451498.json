{"id":"172338516139198_989215434451498","from":{"name":"Anas Rabei","id":"621823724675667"},"message":"Tomorrow lib: Magic decorator syntax for asynchronous code in Python","story":"Anas Rabei shared a link to the group: Egyptian Geeks.","story_tags":{"0":[{"id":"621823724675667","name":"Anas Rabei","type":"user","offset":0,"length":10}],"39":[{"id":"172338516139198","name":"Egyptian Geeks","type":"group","offset":39,"length":14}]},"picture":"https://fbexternal-a.akamaihd.net/safe_image.php?d=AQA9EvpVdtU72fpu&w=130&h=130&url=https%3A%2F%2Favatars0.githubusercontent.com%2Fu%2F2645393%3Fv%3D3%26s%3D400&cfs=1&sx=0&sy=0&sw=250&sh=250&_nc_hash=AQB0L5qqjKrEtVbB","link":"https://github.com/madisonmay/Tomorrow?utm_source=Python+Weekly+Newsletter&utm_campaign=bde289d72f-Python_Weekly_Issue_203_August_6_2015&utm_medium=email&utm_term=0_9e26887fc5-bde289d72f-312682145","name":"madisonmay/Tomorrow","caption":"github.com","description":"Tomorrow - Magic decorator syntax for asynchronous code in Python","icon":"https://www.facebook.com/images/icons/post.gif","actions":[{"name":"Comment","link":"https://www.facebook.com/172338516139198/posts/989215434451498"},{"name":"Like","link":"https://www.facebook.com/172338516139198/posts/989215434451498"},{"name":"Report Post to Admin","link":"https://www.facebook.com/groups/egyptian.geeks/members/"}],"privacy":{"value":"","description":"","friends":"","allow":"","deny":""},"type":"link","status_type":"shared_story","created_time":"2015-08-13T05:20:37+0000","updated_time":"2015-08-13T10:28:32+0000","is_hidden":false,"is_expired":false,"comments":{"data":[{"created_time":"2015-08-13T05:35:53+0000","from":{"name":"Khaled M. Diab","id":"10212550395463324"},"message":"It uses ThreadPoolExecutor which is not really concurrent in CPython due to GIL. A solution would be using ProcessPoolExecutor (https://docs.python.org/3/library/concurrent.futures.html#processpoolexecutor), which seems having a problem (https://github.com/madisonmay/Tomorrow/issues/1)\n\nI would employ multiprocessing module by myself, and manage my pools as I need...","can_remove":false,"like_count":1,"user_likes":false,"id":"989218111117897"},{"created_time":"2015-08-13T05:38:53+0000","from":{"name":"Khaled M. Diab","id":"10212550395463324"},"message":"Second solution would be using PyPy and not CPython. I am not sure if \"futures\" package supports PyPy though. \nNote: \"futures\" package is concurrent.future backport in python 2.7","can_remove":false,"like_count":0,"user_likes":false,"id":"989218597784515"},{"created_time":"2015-08-13T10:28:32+0000","from":{"name":"Mohammad Tayseer","id":"10154965677956341"},"message":"PyPy has GIL as well","can_remove":false,"like_count":0,"user_likes":false,"id":"989301164442925"}],"paging":{"cursors":{"before":"WTI5dGJXVnVkRjlqZAFhKemIzSTZAPVGc1TWpFNE1URXhNVEUzT0RrM09qRTBNemswTkRReE5UTT0ZD","after":"WTI5dGJXVnVkRjlqZAFhKemIzSTZAPVGc1TXpBeE1UWTBORFF5T1RJMU9qRTBNemswTmpFM01UST0ZD"}}}}