{"id":"172338516139198_1420617137977990","from":{"name":"Youhana Sobhy","id":"10155224130892376"},"message":"Please help, i am searching for getting mac address or any unique identifier from each device (specially for mobiles) for a web app , i read more than 100 articles without getting a useful solution , all the mentioned technique are easily abused(fingerprint-cookies jar-canavas) , i read also about ssl client certificates , but they weren't the best for me ,  the main purpose is to track user browser with unique identifier , so if he logged with the correct login credentials but from different device , i can catch him and report that\nSo please help if you can.","actions":[{"name":"Comment","link":"https://www.facebook.com/172338516139198/posts/1420617137977990"},{"name":"Like","link":"https://www.facebook.com/172338516139198/posts/1420617137977990"},{"name":"Report Post to Admin","link":"https://www.facebook.com/groups/egyptian.geeks/members/"}],"privacy":{"value":"","description":"","friends":"","allow":"","deny":""},"type":"status","created_time":"2017-03-14T20:45:59+0000","updated_time":"2017-03-15T13:08:34+0000","is_hidden":false,"is_expired":false,"comments":{"data":[{"created_time":"2017-03-14T21:12:40+0000","from":{"name":"Amr ELsaqqa","id":"10155181258139701"},"message":"We need to know what the app does exactly so we can imagine the applicable solutions, for example a completely different idea may be better in your case.","can_remove":false,"like_count":3,"user_likes":false,"id":"1420632127976491"},{"created_time":"2017-03-15T06:47:26+0000","from":{"name":"Mostafa Mohammed","id":"10211319354915272"},"message":"You can monitor your server and get Mac add for your clients.","can_remove":false,"like_count":0,"user_likes":false,"id":"1420959597943744"},{"created_time":"2017-03-15T07:10:35+0000","from":{"name":"Amr ELsaqqa","id":"10155181258139701"},"message":"For mobile, Apache cordova (phonegap) has device api and uuid for every device (some quirks on some platforms like ios where the uuid is changed every time the app is updated) but anyway I already made such solution as per the screenshot and it works great. \n\nFor browser the situation is difficult unless you are developing a browser plugin that will have access to the client PC\n\nAnother applicable solution is to track user sessions in a table and only allow one session per user. \nThe session id (hash) to be generated from the user agent string, etc.. With combination with localstorage as well.. \n\nSo if the user tried to copy cookies to another browser/pc the session will be invalidated if user agent mismatch occurred or localstorage token is missing and then the violation is recorded (not 100% perfect but will do 95% of the job) \n\nCheck whatsapp web for example of tracking user sessions","can_remove":false,"like_count":1,"user_likes":false,"id":"1420972837942420"},{"created_time":"2017-03-15T07:18:04+0000","from":{"name":"Ahmed Abdalla","id":"10154648711618621"},"message":"FYI Mac address is in ethernet protocol. That's the link layer and that gets discarded from the first router. So you can't use the MAC address as you won't have that info in the received packets. \nThis is one of the very interesting problems to solve and its very famous in the ads business. But for your use case you might need to track the user session with taking care of preventing multiple logins for same session and cookies forgery.","can_remove":false,"like_count":1,"user_likes":false,"id":"1420977741275263"},{"created_time":"2017-03-15T07:24:22+0000","from":{"name":"Ibrahim Abdel Fattah Mohamed","id":"10155628438859041"},"message":"The 1 million dollar question, I tried doing this once, with generating a random token from the user agent and user ip, but then this failed immediately, because the token verification will fail because a user can come from various gateways if we can say so from the ISP, so the cookie/session will remain, but the IP will change, and this will make the whole thing fails! One more problem is that a user can login from a specific user agent, and then the OS upgrades the agent, then the agent itself will change too.\n\nI don't also think that the MAC idea will work, because it would be the MAC address of the gateway not the actual user device MAC, and as long as the ISPs keep changing the routes to different gateways, it won't work!\n\nThe generic way is to add a counter of the user logins, if the user tries to login from another device, this counter can be then used to check on the other devices which should be then stored in your application's DB and give the user the choice to logout from the other device and kill their other session.","can_remove":false,"like_count":0,"user_likes":false,"id":"1420981874608183"},{"created_time":"2017-03-15T11:15:48+0000","from":{"name":"Mohamed Ossama Abdallah","id":"10154194531616790"},"message":"I understand that it's a website. Therefore, for mobile devices, there's almost nothing exposed by the browser that could possibly identify the device (e.g. Mac Address, IMEI, Android ID, Advertising identifiers, etc..) and this is restricted on purpose to avoid exactly that!\n\nTherefore, the solution depends on your purpose, if you need just a warning mechanism that might not be 100% bullet proof, so use one of the known techniques that you already mentioned (mix IP country with UserAgent with some generated pseudo-random UUID on cookie) and then match that with your database.\n\nHowever, if you want tight security then go for some sort of two-factor-authentication to make sure user only uses an authorized device.","can_remove":false,"like_count":2,"user_likes":false,"id":"1421118894594481"}],"paging":{"cursors":{"before":"WTI5dGJXVnVkRjlqZAFhKemIzSTZANVFF5TURZAek1qRXlOemszTmpRNU1Ub3hORGc1TlRJMU9UWXgZD","after":"WTI5dGJXVnVkRjlqZAFhKemIzSTZANVFF5TVRFeE9EZAzVORFU1TkRRNE1Ub3hORGc1TlRjMk5UUTQZD"}}}}